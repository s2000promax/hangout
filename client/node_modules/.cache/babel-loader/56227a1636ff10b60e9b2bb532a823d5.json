{"ast":null,"code":"const TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\nconst USERID_KEY = \"user-local-id\";\nexport function setTokens({\n  refreshToken,\n  accessToken,\n  userId,\n  expiresIn = 3600\n}) {\n  const expiresDate = new Date().getTime() + expiresIn * 1000;\n  localStorage.setItem(USERID_KEY, userId);\n  localStorage.setItem(TOKEN_KEY, accessToken);\n  localStorage.setItem(REFRESH_KEY, refreshToken);\n  localStorage.setItem(EXPIRES_KEY, expiresDate);\n}\nexport function getAccessToken() {\n  return localStorage.getItem(TOKEN_KEY);\n}\nexport function getRefreshToken() {\n  return localStorage.getItem(REFRESH_KEY);\n}\nexport function removeAuthData() {\n  localStorage.removeItem(USERID_KEY);\n  localStorage.removeItem(TOKEN_KEY);\n  localStorage.removeItem(REFRESH_KEY);\n  localStorage.removeItem(EXPIRES_KEY);\n}\nexport function getTokenExpiresDate() {\n  return localStorage.getItem(EXPIRES_KEY);\n}\nexport function getUserId() {\n  return localStorage.getItem(USERID_KEY);\n}\nconst localStorageService = {\n  setTokens,\n  getAccessToken,\n  getRefreshToken,\n  getTokenExpiresDate,\n  getUserId,\n  removeAuthData\n};\nexport default localStorageService;","map":{"version":3,"sources":["/home/designer/GitHub/hangout/client/src/app/services/localStorage.service.js"],"names":["TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","setTokens","refreshToken","accessToken","userId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","removeAuthData","removeItem","getTokenExpiresDate","getUserId","localStorageService"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAlB;AACA,MAAMC,WAAW,GAAG,mBAApB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,UAAU,GAAG,eAAnB;AAEA,OAAO,SAASC,SAAT,CAAmB;AACtBC,EAAAA,YADsB;AAEtBC,EAAAA,WAFsB;AAGtBC,EAAAA,MAHsB;AAItBC,EAAAA,SAAS,GAAG;AAJU,CAAnB,EAKJ;AACC,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuBH,SAAS,GAAG,IAAvD;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBV,UAArB,EAAiCI,MAAjC;AACAK,EAAAA,YAAY,CAACC,OAAb,CAAqBb,SAArB,EAAgCM,WAAhC;AACAM,EAAAA,YAAY,CAACC,OAAb,CAAqBZ,WAArB,EAAkCI,YAAlC;AACAO,EAAAA,YAAY,CAACC,OAAb,CAAqBX,WAArB,EAAkCO,WAAlC;AACH;AACD,OAAO,SAASK,cAAT,GAA0B;AAC7B,SAAOF,YAAY,CAACG,OAAb,CAAqBf,SAArB,CAAP;AACH;AACD,OAAO,SAASgB,eAAT,GAA2B;AAC9B,SAAOJ,YAAY,CAACG,OAAb,CAAqBd,WAArB,CAAP;AACH;AACD,OAAO,SAASgB,cAAT,GAA0B;AAC7BL,EAAAA,YAAY,CAACM,UAAb,CAAwBf,UAAxB;AACAS,EAAAA,YAAY,CAACM,UAAb,CAAwBlB,SAAxB;AACAY,EAAAA,YAAY,CAACM,UAAb,CAAwBjB,WAAxB;AACAW,EAAAA,YAAY,CAACM,UAAb,CAAwBhB,WAAxB;AACH;AAED,OAAO,SAASiB,mBAAT,GAA+B;AAClC,SAAOP,YAAY,CAACG,OAAb,CAAqBb,WAArB,CAAP;AACH;AACD,OAAO,SAASkB,SAAT,GAAqB;AACxB,SAAOR,YAAY,CAACG,OAAb,CAAqBZ,UAArB,CAAP;AACH;AACD,MAAMkB,mBAAmB,GAAG;AACxBjB,EAAAA,SADwB;AAExBU,EAAAA,cAFwB;AAGxBE,EAAAA,eAHwB;AAIxBG,EAAAA,mBAJwB;AAKxBC,EAAAA,SALwB;AAMxBH,EAAAA;AANwB,CAA5B;AAQA,eAAeI,mBAAf","sourcesContent":["const TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\nconst USERID_KEY = \"user-local-id\";\n\nexport function setTokens({\n    refreshToken,\n    accessToken,\n    userId,\n    expiresIn = 3600\n}) {\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\n    localStorage.setItem(USERID_KEY, userId);\n    localStorage.setItem(TOKEN_KEY, accessToken);\n    localStorage.setItem(REFRESH_KEY, refreshToken);\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\n}\nexport function getAccessToken() {\n    return localStorage.getItem(TOKEN_KEY);\n}\nexport function getRefreshToken() {\n    return localStorage.getItem(REFRESH_KEY);\n}\nexport function removeAuthData() {\n    localStorage.removeItem(USERID_KEY);\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.removeItem(REFRESH_KEY);\n    localStorage.removeItem(EXPIRES_KEY);\n}\n\nexport function getTokenExpiresDate() {\n    return localStorage.getItem(EXPIRES_KEY);\n}\nexport function getUserId() {\n    return localStorage.getItem(USERID_KEY);\n}\nconst localStorageService = {\n    setTokens,\n    getAccessToken,\n    getRefreshToken,\n    getTokenExpiresDate,\n    getUserId,\n    removeAuthData\n};\nexport default localStorageService;\n"]},"metadata":{},"sourceType":"module"}