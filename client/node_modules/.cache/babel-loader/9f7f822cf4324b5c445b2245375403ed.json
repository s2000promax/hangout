{"ast":null,"code":"import axios from \"axios\";\nimport localStorageService from \"./localStorage.service\";\nimport config from \"../config.json\";\nconst httpAuth = axios.create({\n  baseURL: config.apiEndpoint + \"/auth/\",\n  params: {\n    key: process.env.REACT_APP_FIREBASE_KEY\n  }\n});\nconst authService = {\n  register: async payload => {\n    const {\n      data\n    } = await httpAuth.post(`signUp`, payload);\n    return data;\n  },\n  login: async ({\n    email,\n    password\n  }) => {\n    const {\n      data\n    } = await httpAuth.post(`signInWithPassword`, {\n      email,\n      password,\n      returnSecureToken: true\n    });\n    return data;\n  },\n  refresh: async () => {\n    const {\n      data\n    } = await httpAuth.post(\"token\", {\n      grant_type: \"refresh_token\",\n      refresh_token: localStorageService.getRefreshToken()\n    });\n    return data;\n  }\n};\nexport default authService;","map":{"version":3,"sources":["/home/designer/GitHub/hangout/client/src/app/services/auth.service.js"],"names":["axios","localStorageService","config","httpAuth","create","baseURL","apiEndpoint","params","key","process","env","REACT_APP_FIREBASE_KEY","authService","register","payload","data","post","login","email","password","returnSecureToken","refresh","grant_type","refresh_token","getRefreshToken"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAEH,MAAM,CAACI,WAAP,GAAqB,QADJ;AAE1BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADb;AAFkB,CAAb,CAAjB;AAOA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAE,MAAOC,OAAP,IAAmB;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,QAAQ,CAACa,IAAT,CAAe,QAAf,EAAwBF,OAAxB,CAAvB;AACA,WAAOC,IAAP;AACH,GAJe;AAKhBE,EAAAA,KAAK,EAAE,OAAO;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP,KAA+B;AAClC,UAAM;AAAEJ,MAAAA;AAAF,QAAW,MAAMZ,QAAQ,CAACa,IAAT,CAAe,oBAAf,EAAoC;AACvDE,MAAAA,KADuD;AAEvDC,MAAAA,QAFuD;AAGvDC,MAAAA,iBAAiB,EAAE;AAHoC,KAApC,CAAvB;AAKA,WAAOL,IAAP;AACH,GAZe;AAahBM,EAAAA,OAAO,EAAE,YAAY;AACjB,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMZ,QAAQ,CAACa,IAAT,CAAc,OAAd,EAAuB;AAC1CM,MAAAA,UAAU,EAAE,eAD8B;AAE1CC,MAAAA,aAAa,EAAEtB,mBAAmB,CAACuB,eAApB;AAF2B,KAAvB,CAAvB;AAIA,WAAOT,IAAP;AACH;AAnBe,CAApB;AAqBA,eAAeH,WAAf","sourcesContent":["import axios from \"axios\";\nimport localStorageService from \"./localStorage.service\";\nimport config from \"../config.json\";\n\nconst httpAuth = axios.create({\n    baseURL: config.apiEndpoint + \"/auth/\",\n    params: {\n        key: process.env.REACT_APP_FIREBASE_KEY\n    }\n});\n\nconst authService = {\n    register: async (payload) => {\n        const { data } = await httpAuth.post(`signUp`, payload);\n        return data;\n    },\n    login: async ({ email, password }) => {\n        const { data } = await httpAuth.post(`signInWithPassword`, {\n            email,\n            password,\n            returnSecureToken: true\n        });\n        return data;\n    },\n    refresh: async () => {\n        const { data } = await httpAuth.post(\"token\", {\n            grant_type: \"refresh_token\",\n            refresh_token: localStorageService.getRefreshToken()\n        });\n        return data;\n    }\n};\nexport default authService;\n"]},"metadata":{},"sourceType":"module"}