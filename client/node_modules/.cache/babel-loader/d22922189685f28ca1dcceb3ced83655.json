{"ast":null,"code":"var _jsxFileName = \"/home/designer/GitHub/hangout/client/src/app/components/page/editUserPage/editUserPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../../utils/ validator\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radio.Field\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getQualities, getQualitiesLoadingStatus } from \"../../../store/qualities\";\nimport { getProfessions, getProfessionsLoadingStatus } from \"../../../store/professions\";\nimport { getCurrentUserData, updateUser } from \"../../../store/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditUserPage = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState();\n  const currentUser = useSelector(getCurrentUserData());\n  const dispatch = useDispatch();\n  const qualities = useSelector(getQualities());\n  const qualitiesLoading = useSelector(getQualitiesLoadingStatus());\n  const qualitiesList = qualities.map(q => ({\n    label: q.name,\n    value: q._id\n  }));\n  const professions = useSelector(getProfessions());\n  const professionLoading = useSelector(getProfessionsLoadingStatus());\n  const professionsList = professions.map(p => ({\n    label: p.name,\n    value: p._id\n  }));\n  const [errors, setErrors] = useState({});\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    dispatch(updateUser({ ...data,\n      qualities: data.qualities.map(q => q.value)\n    }));\n  };\n\n  function getQualitiesListByIds(qualitiesIds) {\n    const qualitiesArray = [];\n\n    for (const qualId of qualitiesIds) {\n      for (const quality of qualities) {\n        if (quality._id === qualId) {\n          qualitiesArray.push(quality);\n          break;\n        }\n      }\n    }\n\n    return qualitiesArray;\n  }\n\n  const transformData = data => {\n    const result = getQualitiesListByIds(data).map(qual => ({\n      label: qual.name,\n      value: qual._id\n    }));\n    return result;\n  };\n\n  useEffect(() => {\n    if (!professionLoading && !qualitiesLoading && currentUser && !data) {\n      setData({ ...currentUser,\n        qualities: transformData(currentUser.qualities)\n      });\n    }\n  }, [professionLoading, qualitiesLoading, currentUser, data]);\n  useEffect(() => {\n    if (data && isLoading) {\n      setIsLoading(false);\n    }\n  }, [data]);\n  const validatorConfog = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    name: {\n      isRequired: {\n        message: \"Введите ваше имя\"\n      }\n    }\n  };\n  useEffect(() => validate(), [data]);\n\n  const handleChange = target => {\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n  };\n\n  const validate = () => {\n    const errors = validator(data, validatorConfog);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(BackHistoryButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3 shadow p-4\",\n        children: !isLoading && Object.keys(professions).length > 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u0418\\u043C\\u044F\",\n            name: \"name\",\n            value: data.name,\n            onChange: handleChange,\n            error: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n            name: \"email\",\n            value: data.email,\n            onChange: handleChange,\n            error: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u0432\\u043E\\u044E \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\",\n            defaultOption: \"Choose...\",\n            name: \"profession\",\n            options: professionsList,\n            onChange: handleChange,\n            value: data.profession,\n            error: errors.profession\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(RadioField, {\n            options: [{\n              name: \"Male\",\n              value: \"male\"\n            }, {\n              name: \"Female\",\n              value: \"female\"\n            }, {\n              name: \"Other\",\n              value: \"other\"\n            }],\n            value: data.sex,\n            name: \"sex\",\n            onChange: handleChange,\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u043E\\u043B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(MultiSelectField, {\n            defaultValue: data.qualities,\n            options: qualitiesList,\n            onChange: handleChange,\n            name: \"qualities\",\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u043A\\u0430\\u0447\\u0435\\u0441\\u0432\\u0442\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !isValid,\n            className: \"btn btn-primary w-100 mx-auto\",\n            children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this) : \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditUserPage, \"d6anjCtQoTdNKmdgBG/6ZB6Aa8o=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = EditUserPage;\nexport default EditUserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserPage\");","map":{"version":3,"sources":["/home/designer/GitHub/hangout/client/src/app/components/page/editUserPage/editUserPage.jsx"],"names":["React","useEffect","useState","validator","TextField","SelectField","RadioField","MultiSelectField","BackHistoryButton","useSelector","useDispatch","getQualities","getQualitiesLoadingStatus","getProfessions","getProfessionsLoadingStatus","getCurrentUserData","updateUser","EditUserPage","isLoading","setIsLoading","data","setData","currentUser","dispatch","qualities","qualitiesLoading","qualitiesList","map","q","label","name","value","_id","professions","professionLoading","professionsList","p","errors","setErrors","handleSubmit","e","preventDefault","isValid","validate","getQualitiesListByIds","qualitiesIds","qualitiesArray","qualId","quality","push","transformData","result","qual","validatorConfog","email","isRequired","message","isEmail","handleChange","target","prevState","Object","keys","length","profession","sex"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../../utils/ validator\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radio.Field\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n    getQualities,\n    getQualitiesLoadingStatus\n} from \"../../../store/qualities\";\nimport {\n    getProfessions,\n    getProfessionsLoadingStatus\n} from \"../../../store/professions\";\nimport { getCurrentUserData, updateUser } from \"../../../store/users\";\n\nconst EditUserPage = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [data, setData] = useState();\n    const currentUser = useSelector(getCurrentUserData());\n    const dispatch = useDispatch();\n    const qualities = useSelector(getQualities());\n    const qualitiesLoading = useSelector(getQualitiesLoadingStatus());\n    const qualitiesList = qualities.map((q) => ({\n        label: q.name,\n        value: q._id\n    }));\n    const professions = useSelector(getProfessions());\n    const professionLoading = useSelector(getProfessionsLoadingStatus());\n    const professionsList = professions.map((p) => ({\n        label: p.name,\n        value: p._id\n    }));\n\n    const [errors, setErrors] = useState({});\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        dispatch(\n            updateUser({\n                ...data,\n                qualities: data.qualities.map((q) => q.value)\n            })\n        );\n    };\n    function getQualitiesListByIds(qualitiesIds) {\n        const qualitiesArray = [];\n        for (const qualId of qualitiesIds) {\n            for (const quality of qualities) {\n                if (quality._id === qualId) {\n                    qualitiesArray.push(quality);\n                    break;\n                }\n            }\n        }\n        return qualitiesArray;\n    }\n    const transformData = (data) => {\n        const result = getQualitiesListByIds(data).map((qual) => ({\n            label: qual.name,\n            value: qual._id\n        }));\n\n        return result;\n    };\n    useEffect(() => {\n        if (!professionLoading && !qualitiesLoading && currentUser && !data) {\n            setData({\n                ...currentUser,\n                qualities: transformData(currentUser.qualities)\n            });\n        }\n    }, [professionLoading, qualitiesLoading, currentUser, data]);\n    useEffect(() => {\n        if (data && isLoading) {\n            setIsLoading(false);\n        }\n    }, [data]);\n\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n\n        name: {\n            isRequired: {\n                message: \"Введите ваше имя\"\n            }\n        }\n    };\n    useEffect(() => validate(), [data]);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    return (\n        <div className=\"container mt-5\">\n            <BackHistoryButton />\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {!isLoading && Object.keys(professions).length > 0 ? (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                label=\"Имя\"\n                                name=\"name\"\n                                value={data.name}\n                                onChange={handleChange}\n                                error={errors.name}\n                            />\n                            <TextField\n                                label=\"Электронная почта\"\n                                name=\"email\"\n                                value={data.email}\n                                onChange={handleChange}\n                                error={errors.email}\n                            />\n                            <SelectField\n                                label=\"Выбери свою профессию\"\n                                defaultOption=\"Choose...\"\n                                name=\"profession\"\n                                options={professionsList}\n                                onChange={handleChange}\n                                value={data.profession}\n                                error={errors.profession}\n                            />\n                            <RadioField\n                                options={[\n                                    { name: \"Male\", value: \"male\" },\n                                    { name: \"Female\", value: \"female\" },\n                                    { name: \"Other\", value: \"other\" }\n                                ]}\n                                value={data.sex}\n                                name=\"sex\"\n                                onChange={handleChange}\n                                label=\"Выберите ваш пол\"\n                            />\n                            <MultiSelectField\n                                defaultValue={data.qualities}\n                                options={qualitiesList}\n                                onChange={handleChange}\n                                name=\"qualities\"\n                                label=\"Выберите ваши качесвта\"\n                            />\n                            <button\n                                type=\"submit\"\n                                disabled={!isValid}\n                                className=\"btn btn-primary w-100 mx-auto\"\n                            >\n                                Обновить\n                            </button>\n                        </form>\n                    ) : (\n                        \"Loading...\"\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditUserPage;\n"]},"metadata":{},"sourceType":"module"}