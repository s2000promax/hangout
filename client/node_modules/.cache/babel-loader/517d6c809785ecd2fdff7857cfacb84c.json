{"ast":null,"code":"import httpService from \"./http.service\";\nimport localStorageService from \"./localStorage.service\";\nconst userEndpoint = \"user/\";\nconst userService = {\n  get: async () => {\n    const {\n      data\n    } = await httpService.get(userEndpoint);\n    return data;\n  },\n  create: async payload => {\n    const {\n      data\n    } = await httpService.put(userEndpoint + payload._id, payload);\n    return data;\n  },\n  getCurrentUser: async () => {\n    const {\n      data\n    } = await httpService.get(userEndpoint + localStorageService.getUserId());\n    return data;\n  },\n  update: async payload => {\n    const {\n      data\n    } = await httpService.patch(userEndpoint + localStorageService.getUserId(), payload);\n    return data;\n  }\n};\nexport default userService;","map":{"version":3,"sources":["/home/designer/GitHub/hangout/client/src/app/services/user.service.js"],"names":["httpService","localStorageService","userEndpoint","userService","get","data","create","payload","put","_id","getCurrentUser","getUserId","update","patch"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AAEA,MAAMC,YAAY,GAAG,OAArB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,GAAG,EAAE,YAAY;AACb,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,WAAW,CAACI,GAAZ,CAAgBF,YAAhB,CAAvB;AACA,WAAOG,IAAP;AACH,GAJe;AAKhBC,EAAAA,MAAM,EAAE,MAAOC,OAAP,IAAmB;AACvB,UAAM;AAAEF,MAAAA;AAAF,QAAW,MAAML,WAAW,CAACQ,GAAZ,CACnBN,YAAY,GAAGK,OAAO,CAACE,GADJ,EAEnBF,OAFmB,CAAvB;AAIA,WAAOF,IAAP;AACH,GAXe;AAYhBK,EAAAA,cAAc,EAAE,YAAY;AACxB,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAML,WAAW,CAACI,GAAZ,CACnBF,YAAY,GAAGD,mBAAmB,CAACU,SAApB,EADI,CAAvB;AAGA,WAAON,IAAP;AACH,GAjBe;AAkBhBO,EAAAA,MAAM,EAAE,MAAOL,OAAP,IAAmB;AACvB,UAAM;AAAEF,MAAAA;AAAF,QAAW,MAAML,WAAW,CAACa,KAAZ,CACnBX,YAAY,GAAGD,mBAAmB,CAACU,SAApB,EADI,EAEnBJ,OAFmB,CAAvB;AAIA,WAAOF,IAAP;AACH;AAxBe,CAApB;AA0BA,eAAeF,WAAf","sourcesContent":["import httpService from \"./http.service\";\nimport localStorageService from \"./localStorage.service\";\n\nconst userEndpoint = \"user/\";\n\nconst userService = {\n    get: async () => {\n        const { data } = await httpService.get(userEndpoint);\n        return data;\n    },\n    create: async (payload) => {\n        const { data } = await httpService.put(\n            userEndpoint + payload._id,\n            payload\n        );\n        return data;\n    },\n    getCurrentUser: async () => {\n        const { data } = await httpService.get(\n            userEndpoint + localStorageService.getUserId()\n        );\n        return data;\n    },\n    update: async (payload) => {\n        const { data } = await httpService.patch(\n            userEndpoint + localStorageService.getUserId(),\n            payload\n        );\n        return data;\n    }\n};\nexport default userService;\n"]},"metadata":{},"sourceType":"module"}