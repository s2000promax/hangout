{"ast":null,"code":"var _jsxFileName = \"/home/designer/GitHub/hangout/client/src/app/components/common/protectedRoute.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { getIsLoggedIn } from \"../../store/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  children,\n  ...rest\n}) => {\n  _s();\n\n  const isLoggedIn = useSelector(getIsLoggedIn());\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (!isLoggedIn) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: \"/login\",\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this);\n      }\n\n      return Component ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 36\n      }, this) : children;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProtectedRoute, \"wwozkPYuXjHFfszlt2mcSB3o0is=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProtectedRoute;\nProtectedRoute.propTypes = {\n  component: PropTypes.func,\n  location: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/designer/GitHub/hangout/client/src/app/components/common/protectedRoute.jsx"],"names":["React","Route","Redirect","PropTypes","useSelector","getIsLoggedIn","ProtectedRoute","component","Component","children","rest","isLoggedIn","props","pathname","state","from","location","propTypes","func","object","oneOfType","arrayOf","node"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,mBAA9B;;;AACA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,QAAxB;AAAkC,KAAGC;AAArC,CAAD,KAAiD;AAAA;;AACpE,QAAMC,UAAU,GAAGP,WAAW,CAACC,aAAa,EAAd,CAA9B;AAEA,sBACI,QAAC,KAAD,OACQK,IADR;AAEI,IAAA,MAAM,EAAGE,KAAD,IAAW;AACf,UAAI,CAACD,UAAL,EAAiB;AACb,4BACI,QAAC,QAAD;AACI,UAAA,EAAE,EAAE;AACAE,YAAAA,QAAQ,EAAE,QADV;AAEAC,YAAAA,KAAK,EAAE;AACHC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AADT;AAFP;AADR;AAAA;AAAA;AAAA;AAAA,gBADJ;AAUH;;AACD,aAAOR,SAAS,gBAAG,QAAC,SAAD,OAAeI;AAAf;AAAA;AAAA;AAAA;AAAA,cAAH,GAA8BH,QAA9C;AACH;AAhBL;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAvBD;;GAAMH,c;UACiBF,W;;;KADjBE,c;AAwBNA,cAAc,CAACW,SAAf,GAA2B;AACvBV,EAAAA,SAAS,EAAEJ,SAAS,CAACe,IADE;AAEvBF,EAAAA,QAAQ,EAAEb,SAAS,CAACgB,MAFG;AAGvBV,EAAAA,QAAQ,EAAEN,SAAS,CAACiB,SAAV,CAAoB,CAC1BjB,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACmB,IAA5B,CAD0B,EAE1BnB,SAAS,CAACmB,IAFgB,CAApB;AAHa,CAA3B;AASA,eAAehB,cAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { getIsLoggedIn } from \"../../store/users\";\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\n    const isLoggedIn = useSelector(getIsLoggedIn());\n\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                if (!isLoggedIn) {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: \"/login\",\n                                state: {\n                                    from: props.location\n                                }\n                            }}\n                        />\n                    );\n                }\n                return Component ? <Component {...props} /> : children;\n            }}\n        />\n    );\n};\nProtectedRoute.propTypes = {\n    component: PropTypes.func,\n    location: PropTypes.object,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}