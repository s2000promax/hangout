{"ast":null,"code":"var _jsxFileName = \"/home/designer/GitHub/hangout/client/src/app/components/ui/loginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/ validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAuthErrors, login } from \"../../store/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    stayOn: false\n  });\n  const loginError = useSelector(getAuthErrors());\n  const history = useHistory();\n  const dispath = useDispatch();\n  const [errors, setErrors] = useState({});\n\n  const handleChange = target => {\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n  };\n\n  const validatorConfog = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      }\n    },\n    password: {\n      isRequired: {\n        message: \"Пароль обязателкн для заполнения\"\n      }\n    }\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  const validate = () => {\n    const errors = validator(data, validatorConfog);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const redirect = history.location.state ? history.location.state.from.pathname : \"/\";\n    dispath(login({\n      payload: data,\n      redirect\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n      name: \"email\",\n      value: data.email,\n      onChange: handleChange,\n      error: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\",\n      name: \"password\",\n      value: data.password,\n      onChange: handleChange,\n      error: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckBoxField, {\n      value: data.stayOn,\n      onChange: handleChange,\n      name: \"stayOn\",\n      children: \"\\u041E\\u0441\\u0442\\u0430\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: loginError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !isValid,\n      className: \"btn btn-primary w-100 mx-auto\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"oq08JR7UlEcFfrvDzU4O8dyyNSQ=\", false, function () {\n  return [useSelector, useHistory, useDispatch];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/designer/GitHub/hangout/client/src/app/components/ui/loginForm.jsx"],"names":["React","useEffect","useState","validator","TextField","CheckBoxField","useHistory","useDispatch","useSelector","getAuthErrors","login","LoginForm","data","setData","email","password","stayOn","loginError","history","dispath","errors","setErrors","handleChange","target","prevState","name","value","validatorConfog","isRequired","message","validate","Object","keys","length","isValid","handleSubmit","e","preventDefault","redirect","location","state","from","pathname","payload"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/ validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAuthErrors, login } from \"../../store/users\";\n\nconst LoginForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const loginError = useSelector(getAuthErrors());\n    const history = useHistory();\n    const dispath = useDispatch();\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателкн для заполнения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const redirect = history.location.state\n            ? history.location.state.from.pathname\n            : \"/\";\n\n        dispath(login({ payload: data, redirect }));\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            {loginError && <p className=\"text-danger\">{loginError}</p>}\n\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}