{"ast":null,"code":"var _jsxFileName = \"/home/designer/GitHub/hangout/client/src/app/components/common/form/checkBoxField.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckBoxField = ({\n  name,\n  value,\n  onChange,\n  children,\n  error\n}) => {\n  const handleChange = () => {\n    onChange({\n      name: name,\n      value: !value\n    });\n  };\n\n  const getInputClasses = () => {\n    return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-check mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: getInputClasses(),\n      type: \"checkbox\",\n      value: \"\",\n      id: name,\n      onChange: handleChange,\n      checked: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-check-label \",\n      htmlFor: name,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CheckBoxField;\nCheckBoxField.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  error: PropTypes.string\n};\nexport default CheckBoxField;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBoxField\");","map":{"version":3,"sources":["/home/designer/GitHub/hangout/client/src/app/components/common/form/checkBoxField.jsx"],"names":["React","PropTypes","CheckBoxField","name","value","onChange","children","error","handleChange","getInputClasses","propTypes","string","bool","func","oneOfType","arrayOf","node"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA;AAAnC,CAAD,KAAgD;AAClE,QAAMC,YAAY,GAAG,MAAM;AACvBH,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAEA,IAAR;AAAcC,MAAAA,KAAK,EAAE,CAACA;AAAtB,KAAD,CAAR;AACH,GAFD;;AAGA,QAAMK,eAAe,GAAG,MAAM;AAC1B,WAAO,sBAAsBF,KAAK,GAAG,aAAH,GAAmB,EAA9C,CAAP;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AACI,MAAA,SAAS,EAAEE,eAAe,EAD9B;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAC,EAHV;AAII,MAAA,EAAE,EAAEN,IAJR;AAKI,MAAA,QAAQ,EAAEK,YALd;AAMI,MAAA,OAAO,EAAEJ;AANb;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAqC,MAAA,OAAO,EAAED,IAA9C;AAAA,gBACKG;AADL;AAAA;AAAA;AAAA;AAAA,YATJ,EAYKC,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAAmCA;AAAnC;AAAA;AAAA;AAAA;AAAA,YAZd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAvBD;;KAAML,a;AAwBNA,aAAa,CAACQ,SAAd,GAA0B;AACtBP,EAAAA,IAAI,EAAEF,SAAS,CAACU,MADM;AAEtBP,EAAAA,KAAK,EAAEH,SAAS,CAACW,IAFK;AAGtBP,EAAAA,QAAQ,EAAEJ,SAAS,CAACY,IAHE;AAItBP,EAAAA,QAAQ,EAAEL,SAAS,CAACa,SAAV,CAAoB,CAC1Bb,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACe,IAA5B,CAD0B,EAE1Bf,SAAS,CAACe,IAFgB,CAApB,CAJY;AAQtBT,EAAAA,KAAK,EAAEN,SAAS,CAACU;AARK,CAA1B;AAWA,eAAeT,aAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label \" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n"]},"metadata":{},"sourceType":"module"}