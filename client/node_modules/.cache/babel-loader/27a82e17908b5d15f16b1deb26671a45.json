{"ast":null,"code":"var _jsxFileName = \"/home/designer/GitHub/hangout/client/src/app/components/ui/qualities/qualitiesList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\nimport { getQualitiesLoadingStatus, getQulitiesByIds, loadQualitiesList } from \"../../../store/qualities\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QualitiesList = ({\n  qualities\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getQualitiesLoadingStatus());\n  const qualitiesList = useSelector(getQulitiesByIds(qualities));\n  useEffect(() => {\n    dispatch(loadQualitiesList());\n  }, []);\n  if (isLoading) return \"Loadind ...\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: qualitiesList.map(qual => /*#__PURE__*/_jsxDEV(Quality, { ...qual\n    }, qual._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n\n_s(QualitiesList, \"jFM3x1o3eQwfvos5/Owi2vDr4Vw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = QualitiesList;\nQualitiesList.propTypes = {\n  qualities: PropTypes.array\n};\nexport default QualitiesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QualitiesList\");","map":{"version":3,"sources":["/home/designer/GitHub/hangout/client/src/app/components/ui/qualities/qualitiesList.jsx"],"names":["React","useEffect","PropTypes","Quality","getQualitiesLoadingStatus","getQulitiesByIds","loadQualitiesList","useDispatch","useSelector","QualitiesList","qualities","dispatch","isLoading","qualitiesList","map","qual","_id","propTypes","array"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACIC,yBADJ,EAEIC,gBAFJ,EAGIC,iBAHJ,QAIO,0BAJP;AAKA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACrC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,SAAS,GAAGJ,WAAW,CAACJ,yBAAyB,EAA1B,CAA7B;AACA,QAAMS,aAAa,GAAGL,WAAW,CAACH,gBAAgB,CAACK,SAAD,CAAjB,CAAjC;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ,CAACL,iBAAiB,EAAlB,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIM,SAAJ,EAAe,OAAO,aAAP;AAEf,sBACI;AAAA,cACKC,aAAa,CAACC,GAAd,CAAmBC,IAAD,iBACf,QAAC,OAAD,OAA4BA;AAA5B,OAAcA,IAAI,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA,YADH;AADL,mBADJ;AAOH,CAjBD;;GAAMP,a;UACeF,W,EACCC,W,EACIA,W;;;KAHpBC,a;AAmBNA,aAAa,CAACQ,SAAd,GAA0B;AACtBP,EAAAA,SAAS,EAAER,SAAS,CAACgB;AADC,CAA1B;AAIA,eAAeT,aAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\nimport {\n    getQualitiesLoadingStatus,\n    getQulitiesByIds,\n    loadQualitiesList\n} from \"../../../store/qualities\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst QualitiesList = ({ qualities }) => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getQualitiesLoadingStatus());\n    const qualitiesList = useSelector(getQulitiesByIds(qualities));\n    useEffect(() => {\n        dispatch(loadQualitiesList());\n    }, []);\n\n    if (isLoading) return \"Loadind ...\";\n\n    return (\n        <>\n            {qualitiesList.map((qual) => (\n                <Quality key={qual._id} {...qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n"]},"metadata":{},"sourceType":"module"}