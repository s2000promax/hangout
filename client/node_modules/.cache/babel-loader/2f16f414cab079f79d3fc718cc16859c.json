{"ast":null,"code":"var _jsxFileName = \"/home/designer/GitHub/hangout/client/src/app/components/ui/comments.jsx\",\n    _s = $RefreshSig$();\n\nimport { orderBy } from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\nimport { createComment, getComments, getCommentsLoadingStatus, loadCommentsList, removeComment } from \"../../store/comments\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadCommentsList(userId));\n  }, [userId]);\n  const isLoading = useSelector(getCommentsLoadingStatus());\n  const comments = useSelector(getComments());\n\n  const handleSubmit = data => {\n    dispatch(createComment({ ...data,\n      pageId: userId\n    }));\n  };\n\n  const handleRemoveComment = id => {\n    dispatch(removeComment(id));\n  };\n\n  const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body \",\n        children: /*#__PURE__*/_jsxDEV(AddCommentForm, {\n          onSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), sortedComments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body \",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), !isLoading ? /*#__PURE__*/_jsxDEV(CommentsList, {\n          comments: sortedComments,\n          onRemove: handleRemoveComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this) : \"loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Comments, \"8CZexrkIMJxDsZkRqm5O0AwqrtM=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/home/designer/GitHub/hangout/client/src/app/components/ui/comments.jsx"],"names":["orderBy","React","useEffect","CommentsList","AddCommentForm","createComment","getComments","getCommentsLoadingStatus","loadCommentsList","removeComment","useSelector","useDispatch","useParams","Comments","userId","dispatch","isLoading","comments","handleSubmit","data","pageId","handleRemoveComment","id","sortedComments","length"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,IAAuBC,cAAvB,QAA6C,oBAA7C;AACA,SACIC,aADJ,EAEIC,WAFJ,EAGIC,wBAHJ,EAIIC,gBAJJ,EAKIC,aALJ,QAMO,sBANP;AAOA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAaF,SAAS,EAA5B;AACA,QAAMG,QAAQ,GAAGJ,WAAW,EAA5B;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,QAAQ,CAACP,gBAAgB,CAACM,MAAD,CAAjB,CAAR;AACH,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAGA,QAAME,SAAS,GAAGN,WAAW,CAACH,wBAAwB,EAAzB,CAA7B;AAEA,QAAMU,QAAQ,GAAGP,WAAW,CAACJ,WAAW,EAAZ,CAA5B;;AACA,QAAMY,YAAY,GAAIC,IAAD,IAAU;AAC3BJ,IAAAA,QAAQ,CAACV,aAAa,CAAC,EAAE,GAAGc,IAAL;AAAWC,MAAAA,MAAM,EAAEN;AAAnB,KAAD,CAAd,CAAR;AACH,GAFD;;AAGA,QAAMO,mBAAmB,GAAIC,EAAD,IAAQ;AAChCP,IAAAA,QAAQ,CAACN,aAAa,CAACa,EAAD,CAAd,CAAR;AACH,GAFD;;AAGA,QAAMC,cAAc,GAAGvB,OAAO,CAACiB,QAAD,EAAW,CAAC,YAAD,CAAX,EAA2B,CAAC,MAAD,CAA3B,CAA9B;AACA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI,QAAC,cAAD;AAAgB,UAAA,QAAQ,EAAEC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAMKK,cAAc,CAACC,MAAf,GAAwB,CAAxB,iBACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGK,CAACR,SAAD,gBACG,QAAC,YAAD;AACI,UAAA,QAAQ,EAAEO,cADd;AAEI,UAAA,QAAQ,EAAEF;AAFd;AAAA;AAAA;AAAA;AAAA,gBADH,GAMG,YATR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPR;AAAA,kBADJ;AAyBH,CAzCD;;GAAMR,Q;UACiBD,S,EACFD,W,EAICD,W,EAEDA,W;;;KARfG,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import { orderBy } from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\nimport {\n    createComment,\n    getComments,\n    getCommentsLoadingStatus,\n    loadCommentsList,\n    removeComment\n} from \"../../store/comments\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nconst Comments = () => {\n    const { userId } = useParams();\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(loadCommentsList(userId));\n    }, [userId]);\n    const isLoading = useSelector(getCommentsLoadingStatus());\n\n    const comments = useSelector(getComments());\n    const handleSubmit = (data) => {\n        dispatch(createComment({ ...data, pageId: userId }));\n    };\n    const handleRemoveComment = (id) => {\n        dispatch(removeComment(id));\n    };\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\n    return (\n        <>\n            <div className=\"card mb-2\">\n                <div className=\"card-body \">\n                    <AddCommentForm onSubmit={handleSubmit} />\n                </div>\n            </div>\n            {sortedComments.length > 0 && (\n                <div className=\"card mb-3\">\n                    <div className=\"card-body \">\n                        <h2>Comments</h2>\n                        <hr />\n                        {!isLoading ? (\n                            <CommentsList\n                                comments={sortedComments}\n                                onRemove={handleRemoveComment}\n                            />\n                        ) : (\n                            \"loading...\"\n                        )}\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}