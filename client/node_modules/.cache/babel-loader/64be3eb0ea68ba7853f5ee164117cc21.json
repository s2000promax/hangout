{"ast":null,"code":"var _jsxFileName = \"/home/designer/GitHub/hangout/client/src/app/components/common/groupList.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GroupList = ({\n  items,\n  valueProperty,\n  contentProperty,\n  onItemSelect,\n  selectedItem\n}) => {\n  if (!Array.isArray(items)) {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: Object.keys(items).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\" + (items[item] === selectedItem ? \" active\" : \"\"),\n        onClick: () => onItemSelect(items[item]),\n        role: \"button\",\n        children: items[item][contentProperty]\n      }, items[item][valueProperty], false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-group\",\n    children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\" + (item === selectedItem ? \" active\" : \"\"),\n      onClick: () => onItemSelect(item),\n      role: \"button\",\n      children: item[contentProperty]\n    }, item[valueProperty], false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GroupList;\nGroupList.defaultProps = {\n  valueProperty: \"_id\",\n  contentProperty: \"name\"\n};\nGroupList.propTypes = {\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  valueProperty: PropTypes.string.isRequired,\n  contentProperty: PropTypes.string.isRequired,\n  onItemSelect: PropTypes.func,\n  selectedItem: PropTypes.object\n};\nexport default GroupList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupList\");","map":{"version":3,"sources":["/home/designer/GitHub/hangout/client/src/app/components/common/groupList.jsx"],"names":["React","PropTypes","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","Array","isArray","Object","keys","map","item","defaultProps","propTypes","oneOfType","object","array","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACfC,EAAAA,KADe;AAEfC,EAAAA,aAFe;AAGfC,EAAAA,eAHe;AAIfC,EAAAA,YAJe;AAKfC,EAAAA;AALe,CAAD,KAMZ;AACF,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcN,KAAd,CAAL,EAA2B;AACvB,wBACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACKO,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,GAAnB,CAAwBC,IAAD,iBACpB;AAEI,QAAA,SAAS,EACL,qBACCV,KAAK,CAACU,IAAD,CAAL,KAAgBN,YAAhB,GAA+B,SAA/B,GAA2C,EAD5C,CAHR;AAMI,QAAA,OAAO,EAAE,MAAMD,YAAY,CAACH,KAAK,CAACU,IAAD,CAAN,CAN/B;AAOI,QAAA,IAAI,EAAC,QAPT;AAAA,kBASKV,KAAK,CAACU,IAAD,CAAL,CAAYR,eAAZ;AATL,SACSF,KAAK,CAACU,IAAD,CAAL,CAAYT,aAAZ,CADT;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AACD,sBACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,cACKD,KAAK,CAACS,GAAN,CAAWC,IAAD,iBACP;AAEI,MAAA,SAAS,EACL,qBACCA,IAAI,KAAKN,YAAT,GAAwB,SAAxB,GAAoC,EADrC,CAHR;AAMI,MAAA,OAAO,EAAE,MAAMD,YAAY,CAACO,IAAD,CAN/B;AAOI,MAAA,IAAI,EAAC,QAPT;AAAA,gBASKA,IAAI,CAACR,eAAD;AATT,OACSQ,IAAI,CAACT,aAAD,CADb;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA3CD;;KAAMF,S;AA4CNA,SAAS,CAACY,YAAV,GAAyB;AACrBV,EAAAA,aAAa,EAAE,KADM;AAErBC,EAAAA,eAAe,EAAE;AAFI,CAAzB;AAIAH,SAAS,CAACa,SAAV,GAAsB;AAClBZ,EAAAA,KAAK,EAAEF,SAAS,CAACe,SAAV,CAAoB,CAACf,SAAS,CAACgB,MAAX,EAAmBhB,SAAS,CAACiB,KAA7B,CAApB,CADW;AAElBd,EAAAA,aAAa,EAAEH,SAAS,CAACkB,MAAV,CAAiBC,UAFd;AAGlBf,EAAAA,eAAe,EAAEJ,SAAS,CAACkB,MAAV,CAAiBC,UAHhB;AAIlBd,EAAAA,YAAY,EAAEL,SAAS,CAACoB,IAJN;AAKlBd,EAAAA,YAAY,EAAEN,SAAS,CAACgB;AALN,CAAtB;AAQA,eAAef,SAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n"]},"metadata":{},"sourceType":"module"}