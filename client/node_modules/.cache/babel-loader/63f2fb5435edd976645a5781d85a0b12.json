{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getIsLoggedIn, getUsersLoadingStatus, loadUsersList } from \"../../../store/users\";\nimport { loadQualitiesList } from \"../../../store/qualities\";\nimport { loadProfessionsList } from \"../../../store/professions\";\n\nconst AppLoader = ({\n  children\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(getIsLoggedIn());\n  const usersStatusLoading = useSelector(getUsersLoadingStatus());\n  useEffect(() => {\n    dispatch(loadQualitiesList());\n    dispatch(loadProfessionsList());\n\n    if (isLoggedIn) {\n      dispatch(loadUsersList());\n    }\n  }, [isLoggedIn]);\n  if (usersStatusLoading) return \"loading\";\n  return children;\n};\n\n_s(AppLoader, \"wWh67yIBZ9ZbdnuwaAPedcG7ZR8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AppLoader;\nAppLoader.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\nexport default AppLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppLoader\");","map":{"version":3,"sources":["/home/designer/GitHub/hangout/client/src/app/components/ui/hoc/appLoader.jsx"],"names":["useEffect","PropTypes","useDispatch","useSelector","getIsLoggedIn","getUsersLoadingStatus","loadUsersList","loadQualitiesList","loadProfessionsList","AppLoader","children","dispatch","isLoggedIn","usersStatusLoading","propTypes","oneOfType","arrayOf","node"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,aADJ,EAEIC,qBAFJ,EAGIC,aAHJ,QAIO,sBAJP;AAKA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,mBAAT,QAAoC,4BAApC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,UAAU,GAAGT,WAAW,CAACC,aAAa,EAAd,CAA9B;AACA,QAAMS,kBAAkB,GAAGV,WAAW,CAACE,qBAAqB,EAAtB,CAAtC;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,CAACJ,iBAAiB,EAAlB,CAAR;AACAI,IAAAA,QAAQ,CAACH,mBAAmB,EAApB,CAAR;;AACA,QAAII,UAAJ,EAAgB;AACZD,MAAAA,QAAQ,CAACL,aAAa,EAAd,CAAR;AACH;AACJ,GANQ,EAMN,CAACM,UAAD,CANM,CAAT;AAOA,MAAIC,kBAAJ,EAAwB,OAAO,SAAP;AACxB,SAAOH,QAAP;AACH,CAbD;;GAAMD,S;UACeP,W,EACEC,W,EACQA,W;;;KAHzBM,S;AAeNA,SAAS,CAACK,SAAV,GAAsB;AAClBJ,EAAAA,QAAQ,EAAET,SAAS,CAACc,SAAV,CAAoB,CAC1Bd,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACgB,IAA5B,CAD0B,EAE1BhB,SAAS,CAACgB,IAFgB,CAApB;AADQ,CAAtB;AAMA,eAAeR,SAAf","sourcesContent":["import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    getIsLoggedIn,\n    getUsersLoadingStatus,\n    loadUsersList\n} from \"../../../store/users\";\nimport { loadQualitiesList } from \"../../../store/qualities\";\nimport { loadProfessionsList } from \"../../../store/professions\";\n\nconst AppLoader = ({ children }) => {\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector(getIsLoggedIn());\n    const usersStatusLoading = useSelector(getUsersLoadingStatus());\n    useEffect(() => {\n        dispatch(loadQualitiesList());\n        dispatch(loadProfessionsList());\n        if (isLoggedIn) {\n            dispatch(loadUsersList());\n        }\n    }, [isLoggedIn]);\n    if (usersStatusLoading) return \"loading\";\n    return children;\n};\n\nAppLoader.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\nexport default AppLoader;\n"]},"metadata":{},"sourceType":"module"}