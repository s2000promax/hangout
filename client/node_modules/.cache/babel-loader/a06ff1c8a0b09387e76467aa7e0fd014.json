{"ast":null,"code":"var _jsxFileName = \"/home/designer/GitHub/hangout/client/src/app/components/ui/registerForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/ validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radio.Field\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getQualities } from \"../../store/qualities\";\nimport { getProfessions } from \"../../store/professions\";\nimport { signUp } from \"../../store/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    profession: \"\",\n    sex: \"male\",\n    name: \"\",\n    qualities: [],\n    licence: false\n  });\n  const qualities = useSelector(getQualities());\n  const qualitiesList = qualities.map(q => ({\n    label: q.name,\n    value: q._id\n  }));\n  const professions = useSelector(getProfessions());\n  const professionsList = professions.map(p => ({\n    label: p.name,\n    value: p._id\n  }));\n  const [errors, setErrors] = useState({});\n\n  const handleChange = target => {\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n  };\n\n  const validatorConfog = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    name: {\n      isRequired: {\n        message: \"Имя обязательно для заполнения\"\n      },\n      min: {\n        message: \"Имя должено состаять миниму из 3 символов\",\n        value: 3\n      }\n    },\n    password: {\n      isRequired: {\n        message: \"Пароль обязательна для заполнения\"\n      },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n      },\n      isContainDigit: {\n        message: \"Пароль должен содержать хотя бы одно число\"\n      },\n      min: {\n        message: \"Пароль должен состаять миниму из 8 символов\",\n        value: 8\n      }\n    },\n    profession: {\n      isRequired: {\n        message: \"Обязательно выберите вашу профессию\"\n      }\n    },\n    licence: {\n      isRequired: {\n        message: \"Вы не можете использовать наш сервис без подтреврждения лицензионного соглашения\"\n      }\n    }\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  const validate = () => {\n    const errors = validator(data, validatorConfog);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const newData = { ...data,\n      qualities: data.qualities.map(q => q.value)\n    };\n    dispatch(signUp(newData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n      name: \"email\",\n      value: data.email,\n      onChange: handleChange,\n      error: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u0418\\u043C\\u044F\",\n      name: \"name\",\n      value: data.name,\n      onChange: handleChange,\n      error: errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\",\n      name: \"password\",\n      value: data.password,\n      onChange: handleChange,\n      error: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u0432\\u043E\\u044E \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\",\n      defaultOption: \"Choose...\",\n      name: \"profession\",\n      options: professionsList,\n      onChange: handleChange,\n      value: data.profession,\n      error: errors.profession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RadioField, {\n      options: [{\n        name: \"Male\",\n        value: \"male\"\n      }, {\n        name: \"Female\",\n        value: \"female\"\n      }, {\n        name: \"Other\",\n        value: \"other\"\n      }],\n      value: data.sex,\n      name: \"sex\",\n      onChange: handleChange,\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u043E\\u043B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelectField, {\n      options: qualitiesList,\n      onChange: handleChange,\n      name: \"qualities\",\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u043A\\u0430\\u0447\\u0435\\u0441\\u0432\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckBoxField, {\n      value: data.licence,\n      onChange: handleChange,\n      name: \"licence\",\n      error: errors.licence,\n      children: [\"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \", /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"\\u043B\\u0438\\u0446\\u0435\\u043D\\u0437\\u0438\\u043E\\u043D\\u043D\\u043E\\u0435 \\u0441\\u043E\\u0433\\u043B\\u0430\\u0448\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !isValid,\n      className: \"btn btn-primary w-100 mx-auto\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterForm, \"FkA5G4OIGodLcg61INAXIUCvsTM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/home/designer/GitHub/hangout/client/src/app/components/ui/registerForm.jsx"],"names":["React","useEffect","useState","validator","TextField","SelectField","RadioField","MultiSelectField","CheckBoxField","useSelector","useDispatch","getQualities","getProfessions","signUp","RegisterForm","dispatch","data","setData","email","password","profession","sex","name","qualities","licence","qualitiesList","map","q","label","value","_id","professions","professionsList","p","errors","setErrors","handleChange","target","prevState","validatorConfog","isRequired","message","isEmail","min","isCapitalSymbol","isContainDigit","validate","Object","keys","length","isValid","handleSubmit","e","preventDefault","newData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/ validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radio.Field\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getQualities } from \"../../store/qualities\";\nimport { getProfessions } from \"../../store/professions\";\nimport { signUp } from \"../../store/users\";\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        name: \"\",\n        qualities: [],\n        licence: false\n    });\n\n    const qualities = useSelector(getQualities());\n    const qualitiesList = qualities.map((q) => ({\n        label: q.name,\n        value: q._id\n    }));\n    const professions = useSelector(getProfessions());\n\n    const professionsList = professions.map((p) => ({\n        label: p.name,\n        value: p._id\n    }));\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Имя обязательно для заполнения\"\n            },\n            min: {\n                message: \"Имя должено состаять миниму из 3 символов\",\n                value: 3\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязательна для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состаять миниму из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтреврждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const newData = {\n            ...data,\n            qualities: data.qualities.map((q) => q.value)\n        };\n        dispatch(signUp(newData));\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Имя\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                name=\"profession\"\n                options={professionsList}\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualitiesList}\n                onChange={handleChange}\n                name=\"qualities\"\n                label=\"Выберите ваши качесвта\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}