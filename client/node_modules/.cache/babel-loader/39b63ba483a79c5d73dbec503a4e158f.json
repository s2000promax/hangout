{"ast":null,"code":"var _jsxFileName = \"/home/designer/GitHub/hangout/client/src/app/components/common/comments/addCommentForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/ validator\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCommentForm = ({\n  onSubmit\n}) => {\n  _s();\n\n  const [data, setData] = useState({});\n  const [errors, setErrors] = useState({});\n\n  const handleChange = target => {\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n  };\n\n  const validatorConfog = {\n    content: {\n      isRequired: {\n        message: \"Сообщение не может быть пустым\"\n      }\n    }\n  };\n\n  const validate = () => {\n    const errors = validator(data, validatorConfog);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const clearForm = () => {\n    setData({});\n    setErrors({});\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    onSubmit(data);\n    console.log(data);\n    clearForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextAreaField, {\n        value: data.content || \"\",\n        onChange: handleChange,\n        name: \"content\",\n        label: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        error: errors.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddCommentForm, \"2xFEb2KyfLxCFvdb0winN0WWsWc=\");\n\n_c = AddCommentForm;\nAddCommentForm.propTypes = {\n  onSubmit: PropTypes.func\n};\nexport default AddCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCommentForm\");","map":{"version":3,"sources":["/home/designer/GitHub/hangout/client/src/app/components/common/comments/addCommentForm.jsx"],"names":["React","useState","TextAreaField","validator","PropTypes","AddCommentForm","onSubmit","data","setData","errors","setErrors","handleChange","target","prevState","name","value","validatorConfog","content","isRequired","message","validate","Object","keys","length","clearForm","handleSubmit","e","preventDefault","isValid","console","log","propTypes","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMU,YAAY,GAAIC,MAAD,IAAY;AAC7BJ,IAAAA,OAAO,CAAEK,SAAD,KAAgB,EACpB,GAAGA,SADiB;AAEpB,OAACD,MAAM,CAACE,IAAR,GAAeF,MAAM,CAACG;AAFF,KAAhB,CAAD,CAAP;AAIH,GALD;;AAMA,QAAMC,eAAe,GAAG;AACpBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,UAAU,EAAE;AACRC,QAAAA,OAAO,EAAE;AADD;AADP;AADW,GAAxB;;AAQA,QAAMC,QAAQ,GAAG,MAAM;AACnB,UAAMX,MAAM,GAAGN,SAAS,CAACI,IAAD,EAAOS,eAAP,CAAxB;AAEAN,IAAAA,SAAS,CAACD,MAAD,CAAT;AACA,WAAOY,MAAM,CAACC,IAAP,CAAYb,MAAZ,EAAoBc,MAApB,KAA+B,CAAtC;AACH,GALD;;AAOA,QAAMC,SAAS,GAAG,MAAM;AACpBhB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACH,GAHD;;AAIA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,OAAO,GAAGR,QAAQ,EAAxB;AACA,QAAI,CAACQ,OAAL,EAAc;AACdtB,IAAAA,QAAQ,CAACC,IAAD,CAAR;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAYvB,IAAZ;AACAiB,IAAAA,SAAS;AACZ,GAPD;;AASA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA,8BACI,QAAC,aAAD;AACI,QAAA,KAAK,EAAElB,IAAI,CAACU,OAAL,IAAgB,EAD3B;AAEI,QAAA,QAAQ,EAAEN,YAFd;AAGI,QAAA,IAAI,EAAC,SAHT;AAII,QAAA,KAAK,EAAC,wDAJV;AAKI,QAAA,KAAK,EAAEF,MAAM,CAACQ;AALlB;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAtDD;;GAAMZ,c;;KAAAA,c;AAuDNA,cAAc,CAAC0B,SAAf,GAA2B;AACvBzB,EAAAA,QAAQ,EAAEF,SAAS,CAAC4B;AADG,CAA3B;AAIA,eAAe3B,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/ validator\";\nimport PropTypes from \"prop-types\";\n\nconst AddCommentForm = ({ onSubmit }) => {\n    const [data, setData] = useState({});\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfog = {\n        content: {\n            isRequired: {\n                message: \"Сообщение не может быть пустым\"\n            }\n        }\n    };\n\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const clearForm = () => {\n        setData({});\n        setErrors({});\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        onSubmit(data);\n        console.log(data);\n        clearForm();\n    };\n\n    return (\n        <div>\n            <h2>New comment</h2>\n            <form onSubmit={handleSubmit}>\n                <TextAreaField\n                    value={data.content || \"\"}\n                    onChange={handleChange}\n                    name=\"content\"\n                    label=\"Сообщение\"\n                    error={errors.content}\n                />\n                <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn btn-primary\">Опубликовать</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nAddCommentForm.propTypes = {\n    onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n"]},"metadata":{},"sourceType":"module"}